--- generated by drizzle
CREATE ROLE "anonymous_user";--> statement-breakpoint
CREATE ROLE "authenticated_user";--> statement-breakpoint
ALTER TABLE "auth"."identities" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "auth"."refresh_tokens" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "auth"."sessions" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
ALTER TABLE "auth"."users" ENABLE ROW LEVEL SECURITY;--> statement-breakpoint
CREATE POLICY "allow authenticated users to read their own identities" ON "auth"."identities" AS PERMISSIVE FOR SELECT TO "authenticated_user" USING (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to create their own identities" ON "auth"."identities" AS PERMISSIVE FOR INSERT TO "authenticated_user" WITH CHECK (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to update their own identities" ON "auth"."identities" AS PERMISSIVE FOR UPDATE TO "authenticated_user" WITH CHECK (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to read their own refresh tokens" ON "auth"."refresh_tokens" AS PERMISSIVE FOR SELECT TO "authenticated_user" USING (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to create their own refresh tokens" ON "auth"."refresh_tokens" AS PERMISSIVE FOR INSERT TO "authenticated_user" WITH CHECK (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to read their own sessions" ON "auth"."sessions" AS PERMISSIVE FOR SELECT TO "authenticated_user" USING (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to create their own sessions" ON "auth"."sessions" AS PERMISSIVE FOR INSERT TO "authenticated_user" WITH CHECK (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to update their own sessions" ON "auth"."sessions" AS PERMISSIVE FOR UPDATE TO "authenticated_user" WITH CHECK (user_id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow unauthenticated users to create an account" ON "auth"."users" AS PERMISSIVE FOR INSERT TO "anonymous_user" WITH CHECK (true);--> statement-breakpoint
CREATE POLICY "allow unauthenticated users to login" ON "auth"."users" AS PERMISSIVE FOR SELECT TO "anonymous_user" USING (true);--> statement-breakpoint
CREATE POLICY "allow authenticated users to read their own data" ON "auth"."users" AS PERMISSIVE FOR SELECT TO "authenticated_user" USING (id = current_setting('app.user_id')::uuid);--> statement-breakpoint
CREATE POLICY "allow authenticated users to update their own data" ON "auth"."users" AS PERMISSIVE FOR UPDATE TO "authenticated_user" USING (id = current_setting('app.user_id')::uuid);

GRANT USAGE ON SCHEMA auth TO anonymous_user;
GRANT USAGE on SCHEMA auth TO authenticated_user;

GRANT INSERT, SELECT ON auth.users TO anonymous_user;
GRANT INSERT, SELECT, UPDATE on ALL TABLES IN SCHEMA auth to authenticated_user;