{
  "id": "1ff1cf3f-d45f-4282-9b4c-423b8bab9403",
  "prevId": "501eeffe-115d-45d4-b26c-5b3557ec95a2",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "auth.api_keys": {
      "name": "api_keys",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "encrypted_key": {
          "name": "encrypted_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner": {
          "name": "owner",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.identities": {
      "name": "identities",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "providers",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "identities_user_id_users_id_fk": {
          "name": "identities_user_id_users_id_fk",
          "tableFrom": "identities",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "allow authenticated users to read their own identities": {
          "name": "allow authenticated users to read their own identities",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated_user"],
          "using": "user_id = current_setting('app.user_id')::uuid"
        },
        "allow authenticated users to create their own identities": {
          "name": "allow authenticated users to create their own identities",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated_user"],
          "withCheck": "user_id = current_setting('app.user_id')::uuid"
        },
        "allow authenticated users to update their own identities": {
          "name": "allow authenticated users to update their own identities",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated_user"],
          "withCheck": "user_id = current_setting('app.user_id')::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.refresh_tokens": {
      "name": "refresh_tokens",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "refresh_tokens_user_id_users_id_fk": {
          "name": "refresh_tokens_user_id_users_id_fk",
          "tableFrom": "refresh_tokens",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "refresh_tokens_session_id_sessions_id_fk": {
          "name": "refresh_tokens_session_id_sessions_id_fk",
          "tableFrom": "refresh_tokens",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": ["session_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "allow authenticated users to read their own refresh tokens": {
          "name": "allow authenticated users to read their own refresh tokens",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated_user"],
          "using": "user_id = current_setting('app.user_id')::uuid"
        },
        "allow authenticated users to create their own refresh tokens": {
          "name": "allow authenticated users to create their own refresh tokens",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated_user"],
          "withCheck": "user_id = current_setting('app.user_id')::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.sessions": {
      "name": "sessions",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "refreshed_at": {
          "name": "refreshed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "sessions_user_id_users_id_fk": {
          "name": "sessions_user_id_users_id_fk",
          "tableFrom": "sessions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "allow authenticated users to read their own sessions": {
          "name": "allow authenticated users to read their own sessions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated_user"],
          "using": "user_id = current_setting('app.user_id')::uuid"
        },
        "allow authenticated users to create their own sessions": {
          "name": "allow authenticated users to create their own sessions",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated_user"],
          "withCheck": "user_id = current_setting('app.user_id')::uuid"
        },
        "allow authenticated users to update their own sessions": {
          "name": "allow authenticated users to update their own sessions",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated_user"],
          "withCheck": "user_id = current_setting('app.user_id')::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "unit_id": {
          "name": "unit_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "encrypted_password": {
          "name": "encrypted_password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "first_name": {
          "name": "first_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "last_name": {
          "name": "last_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "last_signed_in_at": {
          "name": "last_signed_in_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_unit_id_units_id_fk": {
          "name": "users_unit_id_units_id_fk",
          "tableFrom": "users",
          "tableTo": "units",
          "schemaTo": "tenants",
          "columnsFrom": ["unit_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": ["email"]
        }
      },
      "policies": {
        "allow unauthenticated users to create an account": {
          "name": "allow unauthenticated users to create an account",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["anonymous_user"],
          "withCheck": "true"
        },
        "allow unauthenticated users to login": {
          "name": "allow unauthenticated users to login",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["anonymous_user"],
          "using": "true"
        },
        "allow authenticated users to read their own data": {
          "name": "allow authenticated users to read their own data",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated_user"],
          "using": "id = current_setting('app.user_id')::uuid"
        },
        "allow authenticated users to update their own data": {
          "name": "allow authenticated users to update their own data",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated_user"],
          "using": "id = current_setting('app.user_id')::uuid"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "tenants.metadata": {
      "name": "metadata",
      "schema": "tenants",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "tenants.units": {
      "name": "units",
      "schema": "tenants",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "admin_user_id": {
          "name": "admin_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "units_tenant_id_metadata_id_fk": {
          "name": "units_tenant_id_metadata_id_fk",
          "tableFrom": "units",
          "tableTo": "metadata",
          "schemaTo": "tenants",
          "columnsFrom": ["tenant_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "videos.status": {
      "name": "status",
      "schema": "videos",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "video_id": {
          "name": "video_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "video_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "status_video_id_metadata_id_fk": {
          "name": "status_video_id_metadata_id_fk",
          "tableFrom": "status",
          "tableTo": "metadata",
          "schemaTo": "videos",
          "columnsFrom": ["video_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "videos.metadata": {
      "name": "metadata",
      "schema": "videos",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "patient_id": {
          "name": "patient_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "filename": {
          "name": "filename",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "auth.providers": {
      "name": "providers",
      "schema": "auth",
      "values": ["emailpass"]
    },
    "public.video_status": {
      "name": "video_status",
      "schema": "public",
      "values": ["pending", "processing", "processed", "failed"]
    }
  },
  "schemas": {
    "auth": "auth",
    "tenants": "tenants",
    "videos": "videos"
  },
  "sequences": {},
  "roles": {
    "anonymous_user": {
      "name": "anonymous_user",
      "createDb": false,
      "createRole": false,
      "inherit": true
    },
    "authenticated_user": {
      "name": "authenticated_user",
      "createDb": false,
      "createRole": false,
      "inherit": true
    }
  },
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
